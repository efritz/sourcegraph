{
  "ID": "",
  "Title": "",
  "Body": "",
  "Number": 9917,
  "URL": "",
  "State": "",
  "Repository": "",
  "Private": false,
  "Labels": [
   "tracking",
   "team/code-intelligence"
  ],
  "Assignees": null,
  "Milestone": "3.17",
  "Author": "",
  "CreatedAt": "0001-01-01T00:00:00Z",
  "UpdatedAt": "0001-01-01T00:00:00Z",
  "ClosedAt": "0001-01-01T00:00:00Z",
  "Issues": [
   {
    "ID": "MDU6SXNzdWU2MjUzMTQ3NTg=",
    "Title": "Bundle manager janitor: do not stop on first error",
    "Body": "We should try to clean up as much as possible without stopping at the first hiccup.",
    "Number": 11006,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/11006",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-27T01:53:27Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-05-27T18:11:52Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjUyMjg4NDk=",
    "Title": "Codeintel xrepo data is not updated properly",
    "Body": "We currently do not support two dumps providing a package, although this is an obvious scenario.\r\nWe also do not update the lsif_pacakge/lsif_references table on conflict, meaning that if we upload another dump (or re-upload/retry the same dump for processing) that provides the same packages, we won't update the lsif_packages table and we'll delete the old dump, which cascades the package data with it.\r\n\r\nThis can be seen by uploading a dump, then re-uploading it. Every even-numbered upload will clear the relevant data in the table.",
    "Number": 11003,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/11003",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "bug",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-26T22:04:00Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-10T13:42:16Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjI3NTcyNTU=",
    "Title": "Connection between bundle manager and worker is flaky",
    "Body": "A customer has recently showed us that with LSIF uploads between 1-2G on a k8s deployment will see failures 50% of the time from the worker due to a connection reset when trying to fetch the raw upload data.\r\n\r\nWe need to investigate the connection between these two services to determine whether it's a timeout issue or something else. It may be necessary to split the payload into smaller chunks as we do for uploads.",
    "Number": 10913,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10913",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "bug",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-21T20:16:05Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-04T21:58:58Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjE5MjUzMjQ=",
    "Title": "Collapse precise-code-intel-api-server into frontend",
    "Body": "There is no reason this needs to be a separate service anymore and can be easily rolled into our main frontend.",
    "Number": 10873,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10873",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-20T16:55:03Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-05-21T21:20:17Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNjAwNzU=",
    "Title": "Add basic support for LSIF diagnostics",
    "Body": "- Accept and process diagnostics in LSIF input.\r\n- Extend the API surface to allow querying of diagnostic counts.\r\n\r\nRelated: https://github.com/sourcegraph/sourcegraph/pull/10827",
    "Number": 10838,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10838",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:56:38Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-10T16:45:23Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTg1OTM=",
    "Title": "UI for automatic LSIF indexing (global scope)",
    "Body": "Design and implement a site-admin UI page to see what repositories and commits are currently in the automatic LSIF index queue.",
    "Number": 10837,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10837",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:53:17Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-09T15:49:25Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTg1Njg=",
    "Title": "UI for automatic LSIF indexing (repo scope)",
    "Body": "Design and implement a UI page to see what commits are currently in the automatic LSIF index queue for a particular repository.",
    "Number": 10836,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10836",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:53:13Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-09T15:49:34Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTg0MjY=",
    "Title": "UI for LSIF uploads (global scope)",
    "Body": "Design and implement a site-admin UI page to see what uploads are currently in the LSIF queue that is not particular to a single repository. It's become necessary (at least on dotcom) to be able to see aggregate processing errors without going to a particular repository.",
    "Number": 10835,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10835",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:52:50Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-09T15:49:42Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTc2MzU=",
    "Title": "API for LSIF auto index records",
    "Body": "Add GraphQL support for looking at the auto index queue for a particular repository and across all repositories.",
    "Number": 10834,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10834",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:50:37Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-09T15:49:52Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTcxNTg=",
    "Title": "Automatic LSIF indexing",
    "Body": "Write and deploy a first draft of an automatic indexing service to deployed on dot com for the duration of the 3.17 cycle as described in [RFC 153](https://docs.google.com/document/d/1LFwtfIqTgxzyNQDRvKsWbY9pZKiXVhwPyrNB04gnpDQ).",
    "Number": 10833,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10833",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:49:17Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-01T18:48:40Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzMTcxMzE=",
    "Title": "Update worker transaction bookkeeping",
    "Body": "Promote the entire worker transactionally instead of just the database to reduce transaction bookkeeping errors.\r\n\r\nSource: https://github.com/sourcegraph/sourcegraph/pull/10818#discussion_r427628160",
    "Number": 10831,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10831",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T22:11:51Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-09T21:19:13Z"
   },
   {
    "ID": "MDU6SXNzdWU2MTkyNDQ3NTY=",
    "Title": "Infinitely processing malignant uploads",
    "Body": "An upload file may be far too large for the current resources allocated to a worker. If a worker OOMs on a file and it resets, we should set a counter on that record so that we do not try to infinitely reprocess it on workers that will never actually process it successfully.",
    "Number": 10755,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10755",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-15T20:54:55Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-16T14:23:51Z"
   },
   {
    "ID": "MDU6SXNzdWU2MTg0MzA1MTA=",
    "Title": "Code intelligence: 3.17 tracking issue",
    "Body": "### Status\r\n\r\n**Milestone Focus**: We are trying to increase adoption of precise code intelligence by implementing an auto-indexing strategy, improving the UI related to codeintel, and increasing performance of queries and index conversion, and expanding indexer support. We are improving stability of the precise code intel backend and ensuring it does not regress by implementing a set of integration tests. We are also expanding the code intel API surface with diagnostics, which is a critical part of code insights.\r\n\r\n### Availability\r\n\r\nPeriod is from **2020-05-20** to **2020-06-20**. Please write the days you won't be working and the number of working days for the period.\r\n\r\n- Eric: 21d (off memorial day 5/25)\r\n- Garo: 14d\r\n\r\n### Workload\r\n\r\n\u003c!-- LABEL: planning --\u003e\r\n\u003c!-- LABEL: in progress --\u003e\r\n\u003c!-- LABEL: blocked --\u003e\r\n\u003c!-- LABEL: review --\u003e\r\n\u003c!-- LABEL: not started --\u003e\r\n\u003c!-- LABEL: docs --\u003e\r\n\u003c!-- LABEL: specced --\u003e\r\n\u003c!-- LABEL: design --\u003e\r\n\u003c!-- LABEL: tracking --\u003e\r\n\u003c!-- BEGIN WORK --\u003e\n\u003c!-- BEGIN ASSIGNEE: efritz --\u003e\n@efritz\n\n- [x] Codeintel xrepo data is not updated properly [#11003](https://github.com/sourcegraph/sourcegraph/issues/11003) 🐛\n- [x] Add basic support for LSIF diagnostics [#10838](https://github.com/sourcegraph/sourcegraph/issues/10838) \n- [x] Infinitely processing malignant uploads [#10755](https://github.com/sourcegraph/sourcegraph/issues/10755) \n- [x] LSIF plaintext hover support [#7099](https://github.com/sourcegraph/sourcegraph/issues/7099) \n- [x] Improve LSIF root boundaries [#8383](https://github.com/sourcegraph/sourcegraph/issues/8383) \n- [ ] Create docs page for codeintel showcase repos [#9609](https://github.com/sourcegraph/sourcegraph/issues/9609) `docs` \n- [ ] Code intelligence integration tests [#10832](https://github.com/sourcegraph/sourcegraph/issues/10832) \n- [x] Update worker transaction bookkeeping [#10831](https://github.com/sourcegraph/sourcegraph/issues/10831) \n- [x] Connection between bundle manager and worker is flaky [#10913](https://github.com/sourcegraph/sourcegraph/issues/10913) 🐛\n- [x] Collapse precise-code-intel-api-server into frontend [#10873](https://github.com/sourcegraph/sourcegraph/issues/10873) \n- [x] Document LSIF data expectations [#9719](https://github.com/sourcegraph/sourcegraph/issues/9719) `docs` \n- [x] Automatic LSIF indexing [#10833](https://github.com/sourcegraph/sourcegraph/issues/10833) \n- [x] API for LSIF auto index records [#10834](https://github.com/sourcegraph/sourcegraph/issues/10834) \n- [x] UI for LSIF uploads (global scope) [#10835](https://github.com/sourcegraph/sourcegraph/issues/10835) \n- [x] UI for automatic LSIF indexing (repo scope) [#10836](https://github.com/sourcegraph/sourcegraph/issues/10836) \n- [x] UI for automatic LSIF indexing (global scope) [#10837](https://github.com/sourcegraph/sourcegraph/issues/10837) \n- [x] RFC 122: Integrate LSIF indexing into supportive Go and TypeScript repositories [#9288](https://github.com/sourcegraph/sourcegraph/issues/9288) \n- [x] Update and expand the code intelligence team roadmap [#9922](https://github.com/sourcegraph/sourcegraph/issues/9922) 🛠️\n- [x] Bundle manager janitor: do not stop on first error [#11006](https://github.com/sourcegraph/sourcegraph/issues/11006) \n- [ ] ~TypeScript cross-repository go to definition broken with LSIF~ [#9952](https://github.com/sourcegraph/sourcegraph/issues/9952) 🐛\n\u003c!-- END ASSIGNEE --\u003e\n\n\u003c!-- BEGIN ASSIGNEE: gbrik --\u003e\n@gbrik\n\n- [x] Write RFC for precise code intel mono repo support [#10087](https://github.com/sourcegraph/sourcegraph/issues/10087) `planning` \n- [ ] Prototype a new LSIF indexer for C++ based on clangd-indexer [#10175](https://github.com/sourcegraph/sourcegraph/issues/10175) `in progress` \n- [ ] ~Minor: Retry lsif index upload when clone is in progress~ [#9700](https://github.com/sourcegraph/sourcegraph/issues/9700) `in progress` \n- [ ] Index a super cool Go repo and its transitive dependencies [#9746](https://github.com/sourcegraph/sourcegraph/issues/9746) `blocked` \n- [x] Improve visual clarity and add CTAs re code intel [#10083](https://github.com/sourcegraph/sourcegraph/issues/10083) `planning` \n\u003c!-- END ASSIGNEE --\u003e\n\u003c!-- END WORK --\u003e\r\n\r\n#### Legend\r\n\r\n- 👩 Customer issue\r\n- 🐛 Bug\r\n- 🧶 Technical debt\r\n- 🛠️ [Roadmap](https://docs.google.com/document/d/1cBsE9801DcBF9chZyMnxRdolqM_1c2pPyGQz15QAvYI/edit#heading=h.5nwl5fv52ess)\r\n- 🕵️ [Spike](https://en.wikipedia.org/wiki/Spike_(software_development))\r\n- 🔒 Security issue\r\n- :shipit: Pull Request\r\n",
    "Number": 10687,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10687",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence",
     "tracking"
    ],
    "Assignees": [
     "efritz",
     "gbrik"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-05-14T18:00:26Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-18T21:24:47Z"
   },
   {
    "ID": "MDU6SXNzdWU2MDQxMTE2ODI=",
    "Title": "Write RFC for precise code intel mono repo support",
    "Body": "Currently our tooling \u0026 docs are written assuming the user will be uploading LSIF indexes for the entire repo on each commit. This works for repos with a small number of projects, but would probably make precise code intel unusable on a large monorepo 10s or 100s of projects. This issue is to create an RFC drawing on [RFC 101](https://docs.google.com/document/d/15UxJMWUy40hnoA7Eb35BwMfEtOcWmHTSiC_5N-xD36U/edit) proposing tooling features to address this use case.",
    "Number": 10087,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10087",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "future-vision",
     "planned/3.16",
     "planned/3.17",
     "planning",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.17",
    "Author": "gbrik",
    "CreatedAt": "2020-04-21T16:27:51Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-05-27T17:17:17Z"
   },
   {
    "ID": "MDU6SXNzdWU2MDQwNjE2MDY=",
    "Title": "Improve visual clarity and add CTAs re code intel",
    "Body": "The current UI leaves a lot of room for confusion when using hovers, go-to-defs, and find-refs. I want  the status of code intelligence to be visually clear both passively and when doing code intel things. I also want there to be specific explanations/instructions to improve the status of code intel when relevant. Some of this already exists.\r\n\r\nIf I were purely optimizing for precise code intel usability and adoption, I would want the following specific things:\r\n- Badge/indicator somewhere prominent on the page, with 3 states: basic code intel, loading precise code intel, precise code intel\r\n  - The basic code intel badge shouldn't be angry, but the precise code intel badge should be very happy :)\r\n  - On the website, this lives in the top right bar next to git blame. (Or somewhere better? I don't UI enough to know how to place buttons).\r\n  - In the code host extensions, this lives in the sourcegraph badge.\r\n  - When hovering the badge:\r\n    - the basic code intel state contains an explanation + CTA to add LSIF data\r\n    - the loading badge contains more information about indexing progress\r\n    - the precise code intel badge says which commit the data is coming from\r\n  - This information is only relevant for source files in languages we currently have good precise code intel support, so we should show it selectively\r\n- When hovering symbols:\r\n  - When code intel isn't yet available, there is an error/loading indicator with an explanation for why it's not available\r\n  - Otherwise, the hover card + find-ref results both also have the above badge\r\n\r\nBut I'm open to pushback/alternatives on everything.\r\n\r\ncc @sourcegraph/web, thoughts on all of this? and if you were to implement it, what would the timeline be?\r\n\r\nassigned to me while in planning phase, will re-assign/re-assess milestone when we decide what implementation looks like.",
    "Number": 10083,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10083",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "needs-design",
     "planned/3.16",
     "planned/3.17",
     "planning",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.17",
    "Author": "gbrik",
    "CreatedAt": "2020-04-21T14:52:03Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-05-22T14:48:50Z"
   },
   {
    "ID": "MDU6SXNzdWU2MDE0NDU0NTg=",
    "Title": "Update and expand the code intelligence team roadmap",
    "Body": "Our current [team roadmap](https://docs.google.com/document/d/1cBsE9801DcBF9chZyMnxRdolqM_1c2pPyGQz15QAvYI/edit#heading=h.dimwsc9ccmwq) is out-of-date. \r\n\r\nIn addition, during our recent [discussion on planning \u0026 organization](https://docs.google.com/document/d/16IyVmOgYGJ06xfZFgt3zEXVdak6h6UaDOIZ5lcBBdEQ/edit) we identified a need to document a higher level view of our plans. What we call a \"Roadmap\" today is a list of work items, some of which are concretely tied to product deliverables and some of which are more aspirational. \r\n\r\nI wrote https://github.com/sourcegraph/about/pull/784 as a first attempt at documenting some of our higher-level aspirations, but I think we should probably expand on this also.",
    "Number": 9922,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9922",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "roadmap",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "creachadair",
    "CreatedAt": "2020-04-16T20:36:26Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-08T20:02:19Z"
   },
   {
    "ID": "MDU6SXNzdWU1OTc1ODMzOTg=",
    "Title": "Document LSIF data expectations",
    "Body": "From [slack thread](https://sourcegraph.slack.com/archives/CHXHX7XAS/p1586462406237200).\r\n\r\nIs there documentation somewhere explaining which LSIF data tuples we accept and which we ignore?",
    "Number": 9719,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9719",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "docs",
     "planned/3.16",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "christinaforney",
    "CreatedAt": "2020-04-09T22:12:15Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-05-22T19:48:32Z"
   },
   {
    "ID": "MDU6SXNzdWU1ODczMTUyOTk=",
    "Title": "RFC 122: Integrate LSIF indexing into supportive Go and TypeScript repositories",
    "Body": "See [Milestone 3 of RFC 122](https://docs.google.com/document/d/1W8uR0vQBYtdkNynMxEq24CFdzPTWkGijCURsosdvzAM/edit#heading=h.ylem6ffdsey1).",
    "Number": 9288,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9288",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "creachadair",
    "CreatedAt": "2020-03-24T22:21:44Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-08T20:04:10Z"
   },
   {
    "ID": "MDU6SXNzdWU1NjQxNTU2NDY=",
    "Title": "Improve LSIF root boundaries",
    "Body": "Specifically for detection of overlapping dumps, we may treat the following as conflicting:\r\n\r\n- `alpha/bravo/charlie`\r\n- `alpha/bravo/charliefoxtrot`\r\n\r\nBecause one is a prefix of the other, even though one path does not subsume the other. This may also be an issue in finding roots for closest dumps.\r\n\r\nWe could simply require that all roots end with a normalized separator to fix this issue.",
    "Number": 8383,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/8383",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2020-02-12T17:34:13Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-16T15:39:32Z"
   },
   {
    "ID": "MDU6SXNzdWU1MzQyNjU1MTk=",
    "Title": "LSIF plaintext hover support",
    "Body": "We currently assume everything is formatted as markdown. See https://github.com/sourcegraph/sourcegraph/blob/5e425cfec07790e8f4836738629c5ec2b0dd2e6a/lsif/src/worker/importer/correlator.ts#L452",
    "Number": 7099,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/7099",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "lsif",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.17",
    "Author": "efritz",
    "CreatedAt": "2019-12-06T21:27:38Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-16T18:06:51Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjMyMzgxNzQ=",
    "Title": "Create a 'stale code intelligence' tooltip ",
    "Body": "It should look like the [Code-intel-popup-branding frame](https://www.figma.com/file/QOCGTlcc8ZF5EqMl1jwfsk/Code-Intel-UI?node-id=37%3A126) on this Figma design (which is WIP).\r\n\r\nIt should be on by default, but permanently dismissable via user-setting.\r\n\r\nIt should appear when indexing activity occurred previously on the repository, but we're now serving search-based results again because it is too old to be used. It should not be shown if an index is queued or processing (#10926).",
    "Number": 10927,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10927",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-158",
     "good first issue",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [],
    "Milestone": "Backlog",
    "Author": "gbrik",
    "CreatedAt": "2020-05-22T14:11:26Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjMyMzU5Mjg=",
    "Title": "Create a \"code intelligence status\" tooltip",
    "Body": "It should look like the [Code-intel-popup-branding frame](https://www.figma.com/file/QOCGTlcc8ZF5EqMl1jwfsk/Code-Intel-UI?node-id=37%3A126) on this Figma design (which is WIP).\r\n\r\nIt should show statuses for: index queued, index processing, index processing failed. Essentially, it should expose the 'state' column of the 'lsif_uploads' table when it is not 'completed'.\r\n\r\nIt should be on by default, but permanently dismissable via user-setting. The queued/processing and processing failed states should be dismissable separately.",
    "Number": 10926,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10926",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-158",
     "good first issue",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [],
    "Milestone": "Backlog",
    "Author": "gbrik",
    "CreatedAt": "2020-05-22T14:07:36Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2MjEzNTQwOTg=",
    "Title": "Code intelligence integration tests",
    "Body": "I have prototyped an integration test that was used to smoke test the behaviors between the TS and Go implementations of the precise code intel backends. This is not a very good tool to use as part of automated testing as it takes a long time to run and takes a good amount of manual setup.\r\n\r\nWe need to extend this tool so that it _could_ be ran in CI (easy to set up and efficient to run). Success criteria is that @uwedeportivo can run it as part of a release of 3.17+ to supplement or replace the old e2e code intelligence tests.",
    "Number": 10832,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10832",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.17",
     "planned/3.18",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.18",
    "Author": "efritz",
    "CreatedAt": "2020-05-19T23:41:11Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-25T19:21:23Z"
   },
   {
    "ID": "MDU6SXNzdWU2MDY1NTU2MjE=",
    "Title": "Prototype a new LSIF indexer for C++ based on clangd-indexer",
    "Body": "https://clangd.llvm.org/design/indexing.html",
    "Number": 10175,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/10175",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "planned/3.16",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.18",
    "Author": "gbrik",
    "CreatedAt": "2020-04-10T21:11:16Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-07-10T20:46:17Z"
   },
   {
    "ID": "MDU6SXNzdWU1OTgwOTU2MDA=",
    "Title": "Index a super cool Go repo and its transitive dependencies",
    "Body": "- [ ] Identify repo to index\r\n- [ ] Determine its transitive dependencies\r\n- [ ] Upload LSIF indices of all of the project and all of those dependencies\r\n- [ ] Automate doing 2 \u0026 3 given 1\r\n- [ ] Stick it in CI for continuous update.\r\n\r\nedit:\r\nthis is superseded by ongoing auto-indexing efforts, ticket open until all nominees are confirmed indexed",
    "Number": 9746,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9746",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "lsif-go",
     "planned/3.16",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "Backlog",
    "Author": "gbrik",
    "CreatedAt": "2020-04-10T21:08:08Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU1OTczMjUxNzc=",
    "Title": "Minor: Retry lsif index upload when clone is in progress",
    "Body": "When uploading lsif indices to a sourcegraph instance via src-cli, the command fails if cloning the repo is still in progress. The user would pretty much always retry the command, so we should just do that for them.\r\n\r\nIt'd be really simple to add this retry to the src-cli command, but could we alternately have the instance accept the upload instantly but not start processing until the repo is cloned? I assume this would be more work but not sure how much more. @creachadair @efritz ",
    "Number": 9700,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9700",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "lsif-reliability",
     "planned/3.16",
     "planned/3.17",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz",
     "gbrik"
    ],
    "Milestone": "3.18",
    "Author": "gbrik",
    "CreatedAt": "2020-04-09T14:31:30Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-06-26T15:58:58Z"
   },
   {
    "ID": "MDU6SXNzdWU1OTU0MzI2OTI=",
    "Title": "Create docs page for codeintel showcase repos",
    "Body": "Update LSIF docs with links to codeintel showcase repos.",
    "Number": 9609,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/9609",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "docs",
     "planned/3.16",
     "planned/3.17",
     "planned/3.18",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.18",
    "Author": "efritz",
    "CreatedAt": "2020-04-06T21:15:52Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-07-17T14:31:11Z"
   }
  ],
  "PRs": null,
  "LabelAllowlist": null
 }